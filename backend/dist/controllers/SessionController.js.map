{"version":3,"sources":["../../src/controllers/SessionController.js"],"names":["resquest","response","id","body","where","select","first","ong","status","json","error","create"],"mappings":";;;;;;;;uEAEO,iBAAsBA,QAAtB,EAAgCC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACKC,0BADL,GACYF,SAASG,IADrB,CACKD,EADL;AAAA;AAAA,+BAEe,0BAAW,MAAX,EACbE,KADa,CACP,IADO,EACDF,EADC,EAEbG,MAFa,CAEN,MAFM,EAGbC,KAHa,EAFf;;AAAA;AAEGC,2BAFH;;AAAA,4BAMEA,GANF;AAAA;AAAA;AAAA;;AAAA,yDAOQN,SAASO,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B,EAAEC,OAAO,2BAAT,EAA1B,CAPR;;AAAA;AAAA,yDASIT,SAASQ,IAAT,CAAcF,GAAd,CATJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeI,M;;;;;AAFtB","file":"SessionController.js","sourcesContent":["import connection from '../database/connection';\r\n\r\nexport async function create(resquest, response) {\r\n    const { id } = resquest.body;\r\n    const ong = await connection('ongs')\r\n        .where('id', id)\r\n        .select('name')\r\n        .first();\r\n    if (!ong) {\r\n        return response.status(400).json({ error: 'No ONG found with this ID' });\r\n    }\r\n    return response.json(ong);\r\n}"]}