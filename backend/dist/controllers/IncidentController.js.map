{"version":3,"sources":["../../src/controllers/IncidentController.js"],"names":["request","response","query","page","count","console","log","join","limit","offset","select","incidents","header","json","index","body","title","description","value","ong_id","headers","authorization","insert","id","creat","params","where","first","incident","status","error","delete","send","del"],"mappings":";;;;;;;;;;uEAEO,iBAAqBA,OAArB,EAA8BC,QAA9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8CACkBD,QAAQE,KAD1B,CACKC,IADL,EACKA,IADL,uCACY,CADZ;AAAA;AAAA,+BAEmB,0BAAW,WAAX,EAAwBC,KAAxB,EAFnB;;AAAA;AAAA;AAAA;AAEIA,6BAFJ;;AAGHC,gCAAQC,GAAR,CAAYF,KAAZ;AAHG;AAAA,+BAIqB,0BAAW,WAAX,EACnBG,IADmB,CACd,MADc,EACN,SADM,EACK,GADL,EACU,kBADV,EAEnBC,KAFmB,CAEb,CAFa,EAGnBC,MAHmB,CAGZ,CAACN,OAAO,CAAR,IAAa,CAHD,EAInBO,MAJmB,CAIZ,CACJ,aADI,EAEJ,WAFI,EAGJ,YAHI,EAIJ,eAJI,EAKJ,WALI,EAMJ,SANI,CAJY,CAJrB;;AAAA;AAIGC,iCAJH;;AAgBHV,iCAASW,MAAT,CAAgB,eAAhB,EAAiCR,MAAM,UAAN,CAAjC;AAhBG,yDAiBIH,SAASY,IAAT,CAAcF,SAAd,CAjBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeG,K;;;;;;wEAoBf,kBAAqBd,OAArB,EAA8BC,QAA9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wCACmCD,QAAQe,IAD3C,EACKC,KADL,iBACKA,KADL,EACYC,WADZ,iBACYA,WADZ,EACyBC,KADzB,iBACyBA,KADzB;AAEGC,8BAFH,GAEYnB,QAAQoB,OAAR,CAAgBC,aAF5B;AAAA;AAAA,+BAGgB,0BAAW,WAAX,EAAwBC,MAAxB,CAA+B;AAC9CN,wCAD8C;AAE9CC,oDAF8C;AAG9CC,wCAH8C;AAI9CC;AAJ8C,yBAA/B,CAHhB;;AAAA;AAAA;AAAA;AAGII,0BAHJ;AAAA,0DASItB,SAASY,IAAT,CAAc,EAAEU,MAAF,EAAd,CATJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,K;;;;;;wEAYf,kBAAmBxB,OAAnB,EAA4BC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACKsB,0BADL,GACYvB,QAAQyB,MADpB,CACKF,EADL;AAEGJ,8BAFH,GAEYnB,QAAQoB,OAAR,CAAgBC,aAF5B;AAAA;AAAA,+BAGoB,0BAAW,WAAX,EAClBK,KADkB,CACZ,IADY,EACNH,EADM,EAElBb,MAFkB,CAEX,QAFW,EAGlBiB,KAHkB,EAHpB;;AAAA;AAGGC,gCAHH;;AAAA,8BAOCA,SAAST,MAAT,KAAoBA,MAPrB;AAAA;AAAA;AAAA;;AAAA,0DAQQlB,SAAS4B,MAAT,CAAgB,GAAhB,EAAqBhB,IAArB,CAA0B,EAAEiB,OAAO,0BAAT,EAA1B,CARR;;AAAA;AAAA;AAAA,+BAUG,0BAAW,WAAX,EAAwBJ,KAAxB,CAA8B,IAA9B,EAAoCH,EAApC,EAAwCQ,MAAxC,EAVH;;AAAA;AAAA,0DAWI9B,SAAS4B,MAAT,CAAgB,GAAhB,EAAqBG,IAArB,EAXJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,G;;;;;AAlCtB","file":"IncidentController.js","sourcesContent":["import connection from '../database/connection';\r\n\r\nexport async function index(request, response) {\r\n    const { page = 1 } = request.query;\r\n    const [count] = await connection('incidents').count();\r\n    console.log(count);\r\n    const incidents = await connection('incidents')\r\n        .join('ongs', 'ongs.id', '=', 'incidents.ong_id')\r\n        .limit(5)\r\n        .offset((page - 1) * 5)\r\n        .select([\r\n            'incidents.*',\r\n            'ongs.name',\r\n            'ongs.email',\r\n            'ongs.whatsapp',\r\n            'ongs.city',\r\n            'ongs.uf'\r\n        ]);\r\n    response.header('X-Total-Count', count['count(*)']);\r\n    return response.json(incidents);\r\n}\r\n\r\nexport async function creat(request, response) {\r\n    const { title, description, value } = request.body;\r\n    const ong_id = request.headers.authorization;\r\n    const [id] = await connection('incidents').insert({\r\n        title,\r\n        description,\r\n        value,\r\n        ong_id,\r\n    });\r\n    return response.json({ id });\r\n}\r\n\r\nexport async function del(request, response) {\r\n    const { id } = request.params;\r\n    const ong_id = request.headers.authorization;\r\n    const incident = await connection('incidents')\r\n        .where('id', id)\r\n        .select('ong_id')\r\n        .first();\r\n    if (incident.ong_id !== ong_id) {\r\n        return response.status(401).json({ error: 'Operation not permitted.' });\r\n    }\r\n    await connection('incidents').where('id', id).delete();\r\n    return response.status(204).send();\r\n}"]}